//OPerations on circular queues using arrays.
#include<stdio.h>
#define size 10

int q[size];
int rear=0;
int front=0;
int c=0;

void enqueue()
{
    int value;
    if(c==size)
    {
        printf("Q is full.\n");
    }
    else
    {
        printf("enter value to insert into the queue:\n");
        scanf("%d",&value);
        q[rear]=value;
        rear=(rear+1)%size;
        c++;
    }
}

void dequeue()
{
    if(c==0 && rear==front)
    {
        printf("Q is empty.\n");
    }
    else
    {
        printf("deleted item is:%d",q[front]);
        front=(front+1)%size;
        c--;
    }
}

void display()
{
    int i;
    if(rear==0 &&front==0 && c==0)
    {
        printf("Q is empty starting.\n");
    }
    else if(rear==front && c==0)
    {
       
            printf("Q is empty.\n");
    }
    else if(front!=rear)
    {
        if(rear>front)
        {
        for(i=front;i<=rear;i++)
        {
            printf("%d\n",q[i]);
        }
        }
        if(rear<front)
        {
            for(i=front;i<size;i++)
            {
                printf("%d\n",q[i]);
            }
            for(i=0;i<=rear;i++)
            {
                printf("%d\n",q[i]);
            }
        }
    }
    else
    {
        return ;
    }
}

int main()
{
    int choice=0;
    while(choice<4)
    {
        printf("Operaions on circular queue using arrays.\n");
        printf("1.enqueue.\n");
        printf("2.dequeue.\n");
        printf("3.Display.\n");
        printf("Others:Toexit().\n");
        printf("enter u r choice:\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
                    enqueue();
                    break;
            case 2:
                    dequeue();
                    break;
            case 3:
                    display();
                    break;
        }
    }
}
